{"ast":null,"code":"var _jsxFileName = \"/Users/theodorjohansson/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square(_ref) {\n  let {\n    value,\n    onSquareClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board(_ref2) {\n  let {\n    xIsNext,\n    squares,\n    onPlay\n  } = _ref2;\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n\n  /* function onToggleClick(){\n    \n  } */\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n  const squareArray = [];\n  const finalSquareArray = [];\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      squareArray.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[i * 3 + j],\n          onSquareClick: () => handleClick(i * 3 + j)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this)\n      }, void 0, false));\n    }\n    finalSquareArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: squareArray.slice()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }, this));\n    squareArray.length = 0;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), finalSquareArray]\n  }, void 0, true);\n\n  /* return (\n    <>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div>\n    </>\n  ); */\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  const [isRed, toggleRed] = useState(false);\n  const [isblue, toggleBlue] = useState(false);\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const onToggleClick = () => {\n    if (isRed == false) {\n      toggleRed(true);\n      toggleBlue(true);\n    } else {\n      toggleRed(false);\n      toggleBlue(true);\n    }\n  };\n  const divStyle1 = {\n    transform: 'rotate(-180deg)'\n  };\n  const divStyle2 = {\n    transform: 'rotate(180deg)'\n  };\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    if (move == currentMove) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: isRed ? \"red\" : null,\n        children: [\"You are at move \", move]\n      }, move, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: isRed ? \"red\" : null,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onToggleClick,\n        id: \"toggleSwitchButton\",\n        children: \"Switch order of moves history\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: isRed ? \"red\" : null,\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"Iz1xiJIN1pjPi4f/luEXQuvQKvc=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","_ref","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","_ref2","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","winner","status","squareArray","finalSquareArray","j","push","length","_c2","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","isRed","toggleRed","isblue","toggleBlue","handlePlay","nextHistory","jumpTo","nextMove","onToggleClick","divStyle1","transform","divStyle2","moves","map","move","description","id","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/theodorjohansson/tic-tac-toe/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({ value, onSquareClick }) {\n  return (\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n\n  /* function onToggleClick(){\n    \n  } */\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n\n  const squareArray = []\n  const finalSquareArray = []\n\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      squareArray.push(<>\n      <Square value={squares[i*3+j]} onSquareClick={() => handleClick(i*3+j)} />\n      </>)\n    }\n    finalSquareArray.push(<div className=\"board-row\">\n      {squareArray.slice()}\n    </div>)\n    squareArray.length = 0\n  }\n\n\n  return (\n    <>\n    <div className=\"status\">{status}</div>\n    {finalSquareArray}\n    \n    </>\n  )\n\n\n  /* return (\n    <>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div>\n    </>\n  ); */\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  const [isRed, toggleRed] = useState(false)\n  const [isblue, toggleBlue] = useState(false);\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const onToggleClick = () => {\n    if (isRed == false) {\n      toggleRed(true);\n      toggleBlue(true);\n    }\n    else {toggleRed(false);\n      toggleBlue(true);}\n  }\n\n  \n    const divStyle1 = {\n      transform: 'rotate(-180deg)'\n    };\n  \n    const divStyle2 = {\n      transform: 'rotate(180deg)'\n    };\n  \n  \n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    if (move == currentMove) {\n      return (\n        <li key={move} className={isRed ? \"red\" : null}>You are at move {move}</li>\n      )\n    }\n    return (\n      <li key={move} className={isRed ? \"red\" : null} >\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <>\n      <button onClick={onToggleClick} id=\"toggleSwitchButton\">Switch order of moves history</button>\n      </>\n      <div className=\"game-info\">\n        <ol className={isRed ? \"red\" : null}>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      \n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}